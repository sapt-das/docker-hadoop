version: '3.7'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64
    container_name: namenode
    hostname: namenode
    networks:
      - hadoop
    volumes:
      - ./data/namenode:/hadoop/dfs/name
      - ./sample_files:/sample_files
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - 9870:9870
      - 9000:9000
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64
    container_name: datanode
    hostname: datanode
    networks:
      - hadoop
    volumes:
      - ./data/datanode1:/hadoop/dfs/data
    env_file:
      - ./hadoop.env
    ports:
      - 9864:9864
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64
    container_name: resourcemanager
    hostname: resourcemanager
    networks:
      - hadoop
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
    ports:
      - 8088:8088
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      disable: true

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64
    container_name: nodemanager
    hostname: nodemanager
    networks:
      - hadoop
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    ports:
      - 8042:8042
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    platform: linux/amd64
    container_name: historyserver
    hostname: historyserver
    networks:
      - hadoop
    volumes:
      - ./data/historyserver:/hadoop/yarn/timeline
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    ports:
      - 8188:8188
    deploy:
      mode: replicated
      replicas: 1

  hive-metastore-postgresql:
    image: sapdas/hive-metastore-postgresql:3.1.0
    container_name: hive-metastore-postgresql
    hostname: hive-metastore-postgresql
    platform: linux/amd64
    networks:
      - hadoop
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  hive-metastore:
    image: sapdas/hive:3.1.3
    platform: linux/amd64
    container_name: hive-metastore
    hostname: hive-metastore
    networks:
      - hadoop
    env_file:
      - ./hadoop.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

  hive-server:
    image: sapdas/hive:3.1.3
    platform: linux/amd64
    container_name: hive-server
    hostname: hive-server
    networks:
      - hadoop
    env_file:
      - ./hadoop.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  hadoop:
    name: hadoop